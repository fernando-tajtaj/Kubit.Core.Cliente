@page "/MainGrid"
@using System.Text.Json

@model Kubit.Core.Cliente.Pages.MainGridModel

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item fw-bold">@this.Model.Directorio</li>
    </ol>
</nav>

<div class="d-flex justify-content-between align-items-center mb-3">
    <div class="btn-group ms-auto" role="group" aria-label="Button group with nested dropdown">
        <form method="post">
            <button type="submit" asp-page-handler="RedirectToForm" class="btn btn-light d-flex align-items-center gap-2">
                <span class="material-symbols-outlined fs-5">new_window</span>
                <span>Agregar</span>
            </button>
        </form>
        <div class="btn-group" role="group">
            <button type="button" class="btn btn-light dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                <span>Exportar</span>
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#">Excel</a></li>
                <li><a class="dropdown-item" href="#">PDF</a></li>
            </ul>
        </div>
    </div>
</div>

<br />
<div id="tabla-container"></div>

@{
    var gridJson = Model.Fn_ParamConsulta_Vista_Json;
    var columnas = gridJson?.Columnas;
    var datos = gridJson?.Datos;

    bool columnasValidas = columnas.HasValue && columnas.Value.ValueKind != JsonValueKind.Undefined;
    bool datosValidos = datos.HasValue && datos.Value.ValueKind != JsonValueKind.Undefined;
}

@if (columnasValidas)
{
    var columnasJson = JsonSerializer.Serialize(columnas);
    var datosJson = JsonSerializer.Serialize(datos);

    <script type="text/javascript">
        require(['functionGrid'], function(grid) {
            const columnas = @Html.Raw(columnasJson);
            const datos = @Html.Raw(datosJson);

            console.log("Columnas:", columnas);
            grid.createView('tabla-container', columnas, datos);
        });
    </script>
}
