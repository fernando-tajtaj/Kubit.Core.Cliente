@using Kubit.Core.Modelo.Schemas.Seguridad
@model List<Fn_Menu_Permisos>

@{
    IOrderedEnumerable<Fn_Menu_Permisos> parents = 
    new List<Fn_Menu_Permisos>().OrderBy(x => 0);

    if (Model is not null)
    {
        parents = Model
        .Where(x => x.UuidMenuPadre == null)
        .OrderBy(x => x.MenuOrden);
    }
}

@foreach (var parent in parents)
{
    var children = Model == null 
    ? new List<Fn_Menu_Permisos>() 
    : Model.Where(x => x.UuidMenuPadre == parent.MenuUuid)
           .OrderBy(x => x.MenuOrden)
           .ToList();

    var hasChildren = children.Any();
    var collapseId = $"menu_{parent.MenuPermisoUuid}";
    var icon = parent.MenuIcono;
    var name = parent.MenuNombre;

    <div class="nav-item dropdown">
        @if (hasChildren)
        {
            <a class="nav-link dropdown-toggle"
               role="button"
               data-bs-toggle="dropdown"
               aria-expanded="false">@name
            </a>

            <div class="dropdown-menu">
            @foreach (var child in children)
            {
                <form method="post" asp-page="@child.ProgramaRuta">
                    <input type="hidden" name="ProgramaUuid" value="@child.ProgramaUuid" />
                    <input type="hidden" name="Directorio" value="@(parent.MenuNombre + " / " + child.MenuNombre)" />
                    <button class="dropdown-item" type="submit">@child.MenuNombre</button>
                </form>
            }
            </div>
        }
        else
        {
            <form method="post" asp-page="@parent.ProgramaRuta">
                <input type="hidden" name="ProgramaUuid" value="@parent.ProgramaUuid" />
                <input type="hidden" name="Directorio" value="@parent.MenuNombre" />
                <button class="nav-link" type="submit">@parent.MenuNombre</button>
            </form>
        }
    </div>
}